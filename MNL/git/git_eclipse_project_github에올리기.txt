--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
eclipse - git
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
eclipse project git에 올리기
--------------------------------------
https://tychejin.tistory.com/34?category=769330


- 깃 원격저장소에 올리고싶은 프로젝트 -> 우클릭 -> Share Project를 클릭합니다.
- repository 항목 옆의 create 버튼 클릭
- local git repository로 사용할 위치를 지정한 후 finish 버튼 클릭
- current location과 Target location 설정을 확인한다.
- project가 git 프로젝트로 변경되었는지 확인한다.

- Window → Show View → git검색 → Git Repositories 선택

- Git Repositories에 local git repository가 존재하고 밑에 펼쳐보면 쭈루룩 뜬다. Working Tree에 Share한 프로젝트 폴더가 있는지 확인한다.

- Github 사이트 들어가서 로그인 후 원격 저장소의 경로를 복사하자.
https://github.com/cyr919/cyr.git


다시 이클립스로 돌아와서 로컬 저장소와 원격 저장소를 연결해보자.
- Git Repositories의 local git repository의 Remote 선택 후 우클릭 → Create Remote 클릭
- Remote name은 그대로 origin으로 하고 아래에 Configure push가 아니라 Configure fetch를 선택한 후 Create 클릭.

Configure push는 원격 저장소에 push만 할 수 있는 역할이고
Configure fetch는 push뿐만 아니라 pull도 같이 할 수 있다.


Github에서 복사한 원격 저장소의 경로를 넣어 줄 것이다.
- configure Fetch 창에서 Change를 클릭한다.
- select a URI 창에서 URI항목에 원격 저장소의 경로를 입력 한 후 Id, Password를 입력한다.
Finish하기 전에 Store in Secure Store를 체크하게 되면 push할 때마다 매번 로그인 하지 않고 저장하고 사용한다.
- Finish 클릭
- configure Fetch 창으로 이동후 Save 클릭
창이 꺼지고 Git Repositories를 확인하면 Remote부분이 달라진 것을 볼 수 있다.

- project Explore에서 프로젝트 선택 > 우클릭 > team > add to index 클릭
작업한 파일을 stage area 영역에 올리는 단계이다.
- project Explore에서 프로젝트 선택 > 우클릭 > team > commit
commit과 push 별도 진행 예정
- 올릴 파일을 Staged Changes에 드래그 한 후 Commit Message에 무엇이 바꼈는지 입력해 주고 Commit
Unstaged Changes에 프로젝트 파일이 올라가있고 Git에 올리고 싶은 파일을 선택해 Staged Changes로 드래그 하면된다.

-  project Explore에서 프로젝트 선택 > 우클릭 > team > remote > push.. 클릭


repositories
--------------------------------------------------------------------------------

원격 Repository에서 브렌치 생성 후 Git Repositories의 로컬 Repository > remote > 원격 리포지토리 선택 fetch 클릭하고 이후 진행....
Git Repositories의 로컬 Repository > branch > remote Tracking 에 원격에서 추가된 브렌치가 추가되어 있다.

Git Repositories의 로컬 Repository > branch > local 선택후 오른쪽 버튼 > switch to > new branch 클릭
새로운 브렌치의 이름을 입력한다.

기본 프렌치가 새로운 브렌치로 변경된다.

--------------------------------------------------------------------------------

브렌치 변경

project Explore에서 프로젝트 선택 > 우클릭 > switch to > 변경할 브렌치 선택

--------------------------------------------------------------------------------
프로젝트의 내용 수정 후
project 선택 > team > sycronize workspace
변경 된 파일들 선택 commit 클릭
메시지 입력 후 commit만 한다.

project 선택 > team > remote > push ... 클릭
리모트 저장소 선택 후 next 클릭
상단 add create/update specification의 source ref, destination ref(셀렉트 박스)에서 브렌치 선택 후 add Spec 클릭
선택한 것이 하단 영역으로 이동하면 next 버튼 클릭
내용 확인 후 finish 버튼 클릭
결과 창이 나타나면 내용 확인 후 Close클릭

원격 리파지토리를 확인한다.


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
branch 병합
(local)

https://gasaesososo.tistory.com/10
https://lee-mandu.tistory.com/336?category=715432


dev에서 수정 작업이 끝나면 master 브랜치로 체크아웃해서 dev의 수정 내역을 master로 병합해야한다.
project Explore에서 프로젝트 선택 > 우클릭 > switch to > master 브렌치 선택
mater 브랜치에 dev에서 작업한 내용을 병합하기 위해 project Explore에서 프로젝트 선택 > 우클릭 > team > merge 클릭
merge 'mater'창이 열린다. master 브랜치에 dev 브랜치를 병합하려는 것이므로 dev 브렌치를 선택하면 merge 버튼이 활성화된다. 아래에 있는 옵션을 그대로 두고 merge 를 클릭한다.
병합 실행 결과를 알려주는 대화상자가 나타난다. OK를 클릭하면 병합된다. ..

병합된 local brach를 원격 branch에 push 한다.

원격 branch에 push 한 후 dev 브랜치로 이동한다.


https://2clipse-story.tistory.com/4
https://devhj.tistory.com/10

eclipse git push rejected non-fast-forward
https://m.blog.naver.com/sim4858/220924984480

[GitHub] GitHub로 협업하는 방법[3] - Gitflow Workflow
https://gmlwjd9405.github.io/2018/05/12/how-to-collaborate-on-GitHub-3.html
--------------------------------------------------------------------------------

이번에도 git에 대한 일지입니다. 간혹 알수 없는 (?) 이유로 해당 오류가 나곤 하는데. 해결 방법을 검색해서 다음과 같이 해결 하였습니다.

Git Repositories 탭에서 Remotes - origin에 push 방향에 우클릭하여 Configure Fetch를 누릅니다.

Git Repositories는 Window - Show view - Other 로 찾아갈 수 있습니다.



Ref mappings가 비어 있다면 add를 눌러 추가하고, 이미 추가 되어있다면 Advanced를 누릅니다.

Specificattion for fetch에 기존에 등록된 Source Ref가 있다면 Remove를 눌러 제거 해줍니다.



그리고 상단의 탭을 이용해 add Spec을 새로 해줍니다. Finish - Save and Fetch



Branches Local - Merge에서 다시 Merge를 하고

프로젝트에서 Team - Remote - Push - Finishes 를 눌러 Push를 완료합니다.



대부분 이런 문제들은 이클립스 egit의 문제입니다. 개발자라면 그냥 sourcetree 씁시다. 이런 골치아픈 에러 싹 사라짐!!



출처: https://liante0904.tistory.com/125 [Liante의 이야기]

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
eclipse project git에 올리기
--------------------------------------
아래같이 하면 원격 저장소에 1개의 프로젝트만 올릴 수 있다.
별도의 git local repository를 생성한 후 거기의 working set에 프로젝트를 폴더별로 올려야한다.
--------------------------------------

- 깃 원격저장소에 올리고싶은 프로젝트 -> 우클릭 -> Share Project를 클릭합니다.

- 화면에 보이는 Use or create repository inparent folder of project 체크박스를 클릭합니다.

Use or create repository in parent folder of project를 체크하게되면 생성한 프로젝트 폴더 내에 로컬 저장소를 생성하겠다는 의미이다.
만약 다른 폴더에 로컬 저장소를 생성하고 싶은 경우 체크를 하지 않고 create 클릭 후 경로를 지정해 주면 된다.

- Use or create repository in parent folder of project를 체크하면 화면이 바뀌는데 프로젝트를 선택 후 Create Repository를 클릭하면 위의 프로젝트를 선택할 수 있다.

이것의 역할은 로컬 저장소와 현재 프로젝트를 공유를 하게 하는데 여기서 공유란?
로컬 저장소에 현재 프로젝트를 zip파일로 만들어서 복사 붙여넣기를 하지 않고 즉각적으로 반영할 수 있게 하는 것이다.

- Finish 클릭
Package Explore를 보면 프로젝트에 없던 원기둥 모양이 생겼다.


Git Repositories를 열어서 공유된 프로젝트가 있는지 확인할 것이다.
Window → Show View → git검색 → Git Repositories 선택
이렇게 하면 하단에 Git Repositories가 생길 것이고 원하는 곳에다가 드래그 앤 드롭해서 두면 된다.

- Git Repositories를 열어보자.
Share한 프로젝트가 존재하고 밑에 펼쳐보면 쭈루룩 뜬다.
Working Tree가 Share한 프로젝트의 워크스페이스와 같은 내용이다.

- Github 사이트 들어가서 로그인 후 원격 저장소의 경로를 복사하자.
https://github.com/cyr919/cyr.git


다시 이클립스로 돌아와서 로컬 저장소와 원격 저장소를 연결해보자.
- Git Repositories의 Share한 프로젝트의 Repository의 Remote 선택 후 우클릭 → Create Remote 클릭
- Remote name은 그대로 origin으로 하고 아래에 Configure push가 아니라 Configure fetch를 선택한 후 Create 클릭.

Configure push는 원격 저장소에 push만 할 수 있는 역할이고
Configure fetch는 push뿐만 아니라 pull도 같이 할 수 있다.


Github에서 복사한 원격 저장소의 경로를 넣어 줄 것이다.
- configure Fetch 창에서 Change를 클릭한다.
- select a URI 창에서 URI항목에 원격 저장소의 경로를 입력 한 후 Id, Password를 입력한다.
Finish하기 전에 Store in Secure Store를 체크하게 되면 push할 때마다 매번 로그인 하지 않고 저장하고 사용한다.
- Finish 클릭
- configure Fetch 창으로 이동후 Save and Fetch 클릭

창이 꺼지고 Git Repositories를 확인하면 Remote부분이 달라진 것을 볼 수 있다.


이제 프로젝트를 Git에 업로드 해보자.

- Git Repositories에서 Hello Repository 우클릭 → Show In → Git Staging 클릭
하단에 Git Staging 뷰가 나타난다.



- Unstaged Changes에 프로젝트 파일이 올라가있고 Git에 올리고 싶은 파일을 선택해 Staged Changes로 드래그 하면된다.

※ 주의사항
프로젝트를 다른사람과 협업할 경우 소스 파일 외 classpath나 다른 파일을 같이 업로드 하면 다른 사람이 pull할 때 경로가 바뀔 수 있으니 주의해야한다.

- 올릴 파일을 Staged Changes에 드래그 한 후 Commit Message에 무엇이 바꼈는지 입력해 주고 Commit and Push를 클릭하자.
- push branch master창에서 next클릭후 화면이 바뀌면 Finish클릭

Git에 push가 완료되었음을 알려준다.

Close클릭

마지막으로 원격 저장소에 Hello 프로젝트가 push되었는지 확인해보자.

Repository에 들어가서..

Commits를 클릭. (앞의 숫자는 해당 Repository에 얼마나 Commit했는지 보여준다.)

init Commit은 push할 때 Commit Message를 적었던 내용이다.

수정 상태를 보기 위해서는 Commit Message를 클릭하면 된다.

빨간 글자가 수정사항이라는 것을 알려준다.

출처: https://olsh1108o.tistory.com/entry/Git-이클립스에서-Git-commit하기 [개발하는개발자]


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

- 참고
https://coding-factory.tistory.com/entry/Git-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A5%BC-%EA%B9%83GitHub-%EC%9B%90%EA%B2%A9%EC%A0%80%EC%9E%A5%EC%86%8C%EC%97%90-%EC%98%AC%EB%A6%AC%EA%B8%B0Commit-Push
https://tychejin.tistory.com/34?category=769330

https://m.blog.naver.com/PostView.nhn?blogId=special9486&logNo=220201517482&proxyReferer=https%3A%2F%2Fwww.google.com%2F
https://olsh1108o.tistory.com/entry/Git-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4%EC%97%90%EC%84%9C-Git-commit%ED%95%98%EA%B8%B0

https://m.blog.naver.com/PostView.nhn?blogId=special9486&logNo=220201517482&proxyReferer=https%3A%2F%2Fwww.google.com%2F
https://olsh1108o.tistory.com/entry/Git-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4%EC%97%90%EC%84%9C-Git-commit%ED%95%98%EA%B8%B0
https://tychejin.tistory.com/34?category=769330
https://coding-factory.tistory.com/entry/Git-%EC%9D%B4%ED%81%B4%EB%A6%BD%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A5%BC-%EA%B9%83GitHub-%EC%9B%90%EA%B2%A9%EC%A0%80%EC%9E%A5%EC%86%8C%EC%97%90-%EC%98%AC%EB%A6%AC%EA%B8%B0Commit-Push
https://coding-factory.tistory.com/247









--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
