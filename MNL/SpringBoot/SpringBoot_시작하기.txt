--------------------------------------------------------------------------------
참고
--------------------------------------------------------------------------------
- STS로 Spring Boot 웹 프로젝트 시작하기
http://millky.com/@origoni/post/1100
- [스프링부트 (2)] SpringMVC(1) Controller 생성하기
출처: https://goddaehee.tistory.com/203 [갓대희의 작은공간]
--------------------------------------------------------------------------------
프로젝트 생성
--------------------------------------------------------------------------------
1. 스프링 이니셜라이즈로 SpringBoot 프로젝트 쉽게 생성 하기
 - 요즘은 이클립스, 인텔리 제이 등을 통해 쉽게 스프링, 스프링 부트 프로젝트를 시작할 수 있기도 하다.

 - 스프링 이니셜라이즈로 쉽게 스프링 부트 프로젝트를 생성 해보자.

 - 해당 싸이트는 개속 버전업, 리뉴얼 되고 있지만, 얼추 큰 틀은 같다.

1.1 스프링 이니셜라이즈 사이트 접속

 - https://start.spring.io/

이클립스에 import 할 때 이미 존재하는 메이븐 프로젝트 선택
----------------------------------------

또는 이클립스에서

New -> Spring Starter Project
로 생성가능

--------------------------------------------------------------------------------
간단한 컨트롤러 만들기
----------------------------------------

그리고 아주 간단한 컨트롤러를 만들어 보자.

package com.millky.blog;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class HelloRestController {
	@RequestMapping("/")
	public String index() {
		return "helloworld!";
	}
}

----------------------------------------
이때 라이브러리
----------------------------------------
<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- <dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.1.3</version>
		</dependency> -->
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<scope>runtime</scope>
		</dependency>


		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency> -->
        <!-- https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1 -->
		<dependency>
		    <groupId>org.bgee.log4jdbc-log4j2</groupId>
		    <artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
		    <version>1.16</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.8.6</version>
		</dependency>


	</dependencies>
----------------------------------------
----------------------------------------


브라우저로 http://localhost:8080/ 열어보면 확인 가능
----------------------------------------



이렇게 해서 간단하게 Spring Starter Project로 Spring Boot 프로젝트를 시작하는 법을 알아 보았다.

이 글은 스프링 또는 스프링 부트를 이미 안다는 가정 하에 간단하게 시작할 수 있는 방법이다.

스프링을 써본 사람이라면 부트는 아주 금방 사용 할 수 있을것이다. (단지 스프링 프로젝트들 + 알파를 쓰기 좋게 묶어 놓은것이다.) 자세한 사항은 앞으로 작성해 보겠다.

스프링 부트에 대해 알고 싶은 사람은 http://docs.spring.io/spring-boot/docs/1.2.2.RELEASE/reference/htmlsingle/ 참고 부탁드린다. 문서가 너무 잘 되어있어.. 사실 더이상의 설명이 필요 없을 정도다 ^^;;



밀키 오픈소스 블로그를 만드는 과정을 계속 글로 남겨보고 싶긴한데 ^^;; 과연 잘 할 수 있을지는 모르겠다.
일주일에 한번씩이라도 도전해 봐야지.

--------------------------------------------------------------------------------
log 설정
--------------------------------------------------------------------------------

1. Logback 이란? 특징?
 - 자바 오픈소스 로깅 프레임워크,  SLF4J의 구현체
 - 스프링 부트의 기본으로 설정되어 있어서 사용시 별도로 라이브러리를 추가하지 않아도 된다.
 - log4j, log4j2 등과 성능을 비교했을 때에도 logback이 더 훌륭한 성능을 보여준다.

 - logback-spring.xml 파일을 resources 디렉토리에 만들어서 참조한다.



 - 참고 순서

1) classpath(resources디렉토리 밑)에 logback-spring.xml파일이 있으면 설정파일을 읽어간다.
2) logback-spring.xml파일이 없다면 .yml(.properties)파일의 설정을 읽어간다.


출처: https://goddaehee.tistory.com/206?category=367461 [갓대희의 작은공간]

----------------------------------------
파일 설정 등은 나중에 확인하기
https://goddaehee.tistory.com/206?category=367461

--------------------------------------------------------------------------------
DB log 설정
--------------------------------------------------------------------------------
다만 스프링 부트에서 logback은 기본으로 포함되어 있지만 jdbc에 대한 logback 설정은 되어 있지  않기 때문에 추가 설정이 필요하다.

이 부분에 대해서 간단하게 다음 포스팅과 같이 설정하면 하면되니 참고 하도록 하자.

1. 라이브러리 추가 (디펜던시  추가)
<!-- DB Logback -->
		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>
			<artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
			<version>1.16</version>
		</dependency>

2. log4jdbc.log4j2.properties 파일 추가
 - resources 폴더 아래에 log4jdbc.log4j2.properties 파일을 추가하여 다음 2줄을 추가 하여 주자.

log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
log4jdbc.dump.sql.maxlinelength=0

3. DB 설정정보 수정하기



출처: https://goddaehee.tistory.com/207?category=367461 [갓대희의 작은공간]


--------------------------------------------------------------------------------
DataBase 연동
--------------------------------------------------------------------------------

[스프링부트 (4)] Spring Boot DataBase 연동하기 (MariaDB, MyBatis, HikariCP)

출처: https://goddaehee.tistory.com/205?category=367461 [갓대희의 작은공간]

----------------------------------------
Dependency 추가
----------------------------------------


<!-- MariaDB -->
<dependency>
<groupId>org.mariadb.jdbc</groupId>
<artifactId>mariadb-java-client</artifactId>
</dependency>
<dependency>
<groupId>org.mybatis.spring.boot</groupId>
<artifactId>mybatis-spring-boot-starter</artifactId>
<version>2.1.1</version>
</dependency>

출처: https://goddaehee.tistory.com/205?category=367461 [갓대희의 작은공간]

----------------------------------------
application.properties 추가
----------------------------------------

1) application.properties 추가



# mybatis 매핑 type을 짧게 쓰기 위한 설정
# mapper.xml에서 resultType을 지정할 때 com.god.bo.test.vo.TestVo 대신 TestVo로 간략히 할 수 있다.

mybatis.type-aliases-package:com.god.bo.test.vo
# mapper.xml 위치 지정
# **은 하위 폴더 레벨에 상관없이 모든 경로를 뜻하며, *는 아무 이름이나 와도 된다는것을 뜻합니다.
mybatis.mapper-locations: mybatis/**/*.xml

출처: https://goddaehee.tistory.com/205?category=367461 [갓대희의 작은공간]

9. HikariCP



▶ 설정 예시
결국 예전 버전에서는 명시하여 사용해야했지만, 이제는 application.properties에 간단한 설정만 한다면 쉽게 사용할 수 있다.

#MariaDB
spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mariadb://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC
#Hikari
spring.datasource.hikari.username=username
spring.datasource.hikari.password=password
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-test-query=SELECT 1


출처: https://goddaehee.tistory.com/205?category=367461 [갓대희의 작은공간]


- 서버 이름 : adt-dev-kc-tsop-sqlmi.public.1e4e405f38d5.database.windows.net,3342

- id / pw : tso_dev2 / !qwer1234nt

----------------------------------------
Mapper 추가
----------------------------------------


vps/src/main/resources/mappers/service/common/CommonMapper.xml


--------------------------------------------------------------------------------
----------------------------------------
--------------------------------------------------------------------------------




